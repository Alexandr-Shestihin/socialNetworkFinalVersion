{"version":3,"sources":["components/login/login.module.scss","components/login/login.jsx","components/login/loginContainer.jsx"],"names":["module","exports","Input","Element","LoginForm","isAuth","login","password","thunkLogin","validationSchema","yup","shape","min","email","required","to","initialValues","onSubmit","values","setSubmitting","setStatus","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","status","className","s","errorMassage","createField","type","disabled","Login","props","form","LoginContainer","this","React","Component","connect","state","userId","auth"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,aAAe,8B,yJCMtDC,EAAQC,YAAQ,SAWTC,EAAY,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAE5CC,EAAmBC,MAAaC,MAAM,CACzCL,MAAOI,MAAaE,IAAI,EAAG,iGAAsBC,MAAM,sBAAYC,SAAS,sEAC5EP,SAAUG,MAAaE,IAAI,GAAI,kGAAuBE,SAAS,wEAElE,OAAIT,EAAe,cAAC,IAAD,CAAUU,GAAI,aAG9B,cAAC,IAAD,CACGC,cAAe,CAAEV,MAAOA,EAAOC,SAAUA,GACzCE,iBAAkBA,EAClBQ,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACjCZ,EAAWU,EAAOZ,MAAOY,EAAOX,SAAUW,EAAOb,OAAQe,GACzDD,GAAc,IALpB,SAQI,gBACED,EADF,EACEA,OACAG,EAFF,EAEEA,OACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,WACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,aACAC,EARF,EAQEA,OARF,OAUE,uBAAMV,SAAUQ,EAAhB,UACG,mBAAGG,UAAWC,IAAEC,aAAhB,SAA+BH,IAE9BI,YAAY7B,EAAOmB,EAAOf,MAAOqB,EAAQL,EAAQhB,MAAO,QAAS,QAAS,QAAS,QAASiB,EAAcC,EAAYN,EAAOZ,OAE7HyB,YAAY7B,EAAOmB,EAAOd,SAAUoB,EAAQL,EAAQf,SAAU,WAAY,WAAY,WAAY,WAAYgB,EAAcC,EAAYN,EAAOX,UAE/IwB,YAAY7B,EAAO,KAAM,KAAM,KAAM,WAAY,aAAc,aAAc,aAAcqB,EAAcC,EAAY,KAAM,eAmB5H,uBACA,wBAAQQ,KAAK,SAASC,SAAUP,EAAhC,2BAOAQ,EAtED,SAACC,GACZ,OACG,sBAAKP,UAAWC,IAAEO,KAAlB,UACG,uCACA,cAAC,EAAD,eAAeD,Q,gBCRlBE,E,uKACH,WACGC,KAAKH,MAAM3B,e,oBAEd,WACG,OACG,cAAC,EAAD,eAAW8B,KAAKH,Y,GANII,IAAMC,WAmBpBC,uBATO,SAACC,GACpB,MAAO,CACJC,OAAQD,EAAME,KAAKD,OACnB9B,MAAO6B,EAAME,KAAK/B,MAClBP,MAAOoC,EAAME,KAAKtC,MAClBD,OAAQqC,EAAME,KAAKvC,UAIe,CAAEG,gBAA3BiC,CAAyCJ","file":"static/js/8.66040adf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__AqY3e\",\"errorMassage\":\"login_errorMassage__2jcCQ\"};","import React from 'react';\r\nimport s from './login.module.scss';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Element, { createField } from '../common/formControls/formControls';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Input = Element('input');\r\n\r\nconst Login = (props) => {\r\n   return (\r\n      <div className={s.form}>\r\n         <h1>Login</h1>\r\n         <LoginForm {...props} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const LoginForm = ({ isAuth, login, password, thunkLogin }) => {\r\n   //сделана деструктуризация: вместо props были в объекте прокинуты сво-ва\r\n   const validationSchema = yup.object().shape({\r\n      login: yup.string().min(5, \"минимум 5 символов\").email('Не email').required('Обязательно'),\r\n      password: yup.string().min(10, \"минимум 10 символов\").required('Обязательно'),\r\n   })\r\n   if (isAuth) return <Redirect to={\"/profile\"} />\r\n\r\n   return (\r\n      <Formik\r\n         initialValues={{ login: login, password: password }}\r\n         validationSchema={validationSchema}\r\n         onSubmit={(values, { setSubmitting, setStatus }) => {\r\n            thunkLogin(values.login, values.password, values.isAuth, setStatus);\r\n            setSubmitting(false);\r\n         }}\r\n      >\r\n         {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            status,\r\n         }) => (\r\n            <form onSubmit={handleSubmit}>\r\n               <p className={s.errorMassage}>{status}</p>\r\n\r\n               {createField(Input, errors.login, status, touched.login, \"login\", \"login\", \"login\", 'Login', handleChange, handleBlur, values.login)}\r\n\r\n               {createField(Input, errors.password, status, touched.password, \"password\", \"password\", \"Password\", \"Password\", handleChange, handleBlur, values.password)}\r\n\r\n               {createField(Input, null, null, null, \"checkbox\", \"rememberMe\", \"rememberMe\", \"rememberMe\", handleChange, handleBlur, null, 'remember me')}\r\n\r\n               {/* <div className={s.inputContainer}>\r\n                  <Field\r\n                     component={Input}\r\n                     errors={errors.password}\r\n                     status={status}\r\n                     touched={touched.password}\r\n                     type=\"password\"\r\n                     name=\"password\"\r\n                     id=\"password\"\r\n                     placeholder=\"Password\"\r\n                     onChange={handleChange}\r\n                     onBlur={handleBlur}\r\n                     value={values.password}\r\n                  />\r\n               </div> */}\r\n               {/* <div className={s.inputContainer}>\r\n                  <Field component=\"input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" /><label htmlFor=\"rememberMe\">remember me</label></div> */}\r\n               <br />\r\n               <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n            </form>\r\n         )}\r\n      </Formik >\r\n   )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from './login';\r\nimport { connect } from 'react-redux';\r\nimport { thunkLogin } from '../../redux/auth-reducer';\r\n//комментарий\r\nclass LoginContainer extends React.Component {\r\n   componentDidMount() {\r\n      this.props.thunkLogin();\r\n   }\r\n   render() {\r\n      return (\r\n         <Login {...this.props} />\r\n      )\r\n   }\r\n}\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      userId: state.auth.userId,\r\n      email: state.auth.email,\r\n      login: state.auth.login,\r\n      isAuth: state.auth.isAuth,\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, { thunkLogin })(LoginContainer);"],"sourceRoot":""}