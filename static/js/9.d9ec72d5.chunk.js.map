{"version":3,"sources":["components/componentForFormik/forFormik.jsx"],"names":["Input","Element","ForFormik","props","validationSchema","yup","shape","name","matches","required","tel","min","max","password","confirmPassword","oneOf","email","initialValues","validateOnBlur","onSubmit","values","console","log","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","htmlFor","component","type","id","onChange","onBlur","value","disabled","onClick"],"mappings":"gHAAA,+CAKMA,EAAQC,YAAQ,SAiIPC,UA/HG,SAACC,GAChB,IAAMC,EAAmBC,MAAaC,MAAM,CACzCC,KAAMF,MAAaG,QAChB,0CACA,uHACDC,SAAS,sEACXC,IAAKL,MACDG,QAAQ,WAAY,+FACpBG,IAAI,GAAI,uKACRC,IAAI,GAAI,2GACRH,SAAS,yFACbI,SAAUR,MAAaI,SAAS,sEAChCK,gBAAiBT,MAAaU,MAAM,CAACV,IAAQ,aAAc,4GAAuBI,SAAS,sEAC3FO,MAAOX,MAAaW,MAAM,mFAAuBP,SAAS,wEAG7D,OACG,8BACG,cAAC,IAAD,CACGQ,cAAe,CACZV,KAAM,yDACNG,IAAK,cACLG,SAAU,MACVG,MAAO,oBACPF,gBAAiB,OAEpBI,gBAAc,EACdC,SAAU,SAACC,GACRC,QAAQC,IAAIF,IAEfhB,iBAAkBA,EAZrB,SAcI,gBAAGgB,EAAH,EAAGA,OAAQG,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,WAAYC,EAAtD,EAAsDA,QAASC,EAA/D,EAA+DA,aAAcC,EAA7E,EAA6EA,MAA7E,OACE,uBAAMV,SAAUS,EAAhB,UACG,8BACG,8BACG,uBAAOE,QAAQ,OAAf,gCACA,cAAC,IAAD,CACGC,UAAW/B,EACXuB,OAAQA,EAAOhB,KACfyB,KAAM,OACNzB,KAAM,OACN0B,GAAI,OACJC,SAAUT,EACVU,OAAQT,EACRU,MAAOhB,EAAOb,KACdiB,QAASA,EAAQjB,YAM1B,8BACG,8BACG,uBAAOuB,QAAQ,QAAf,4CACA,cAAC,IAAD,CACGC,UAAW/B,EACXuB,OAAQA,EAAOP,MACfgB,KAAM,OACNzB,KAAM,QACN0B,GAAI,QACJC,SAAUT,EACVU,OAAQT,EACRU,MAAOhB,EAAOJ,MACdQ,QAASA,EAAQR,aAI1B,8BACG,8BACG,uBAAOc,QAAQ,MAAf,wDACA,cAAC,IAAD,CACGC,UAAW/B,EACXuB,OAAQA,EAAOb,IACfsB,KAAM,MACNzB,KAAM,MACN0B,GAAI,MACJC,SAAUT,EACVU,OAAQT,EACRU,MAAOhB,EAAOV,IACdc,QAASA,EAAQd,WAI1B,gCACG,uBAAOoB,QAAQ,WAAf,kDACA,cAAC,IAAD,CACGC,UAAW/B,EACXuB,OAAQA,EAAOV,SACfmB,KAAM,WACNzB,KAAM,WACN0B,GAAI,WACJC,SAAUT,EACVU,OAAQT,EACRU,MAAOhB,EAAOP,SACdW,QAASA,EAAQX,cAGvB,gCACG,uBAAOiB,QAAQ,kBAAf,qHACA,cAAC,IAAD,CACGC,UAAW/B,EACXuB,OAAQA,EAAOT,gBACfkB,KAAM,WACNzB,KAAM,kBACN0B,GAAI,kBACJC,SAAUT,EACVU,OAAQT,EACRU,MAAOhB,EAAON,gBACdU,QAASA,EAAQV,qBAGvB,wBACGuB,UAAWV,IAAYE,EACvBS,QAASV,EACTI,KAAM,SAHT","file":"static/js/9.d9ec72d5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage, validateYupSchema } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Element from '../common/formControls/formControls';\r\n\r\nconst Input = Element('input');\r\n\r\nconst ForFormik = (props) => {\r\n   const validationSchema = yup.object().shape({\r\n      name: yup.string().matches(\r\n         /^[a-zA-ZаА-яЯ0-9]+$/,\r\n         'Недопустимые символы'\r\n      ).required('Обязательно'),\r\n      tel: yup.string()\r\n         .matches(/^[0-9]+$/, \"Интересный номер\")\r\n         .min(11, 'Номер должен быть минимум 11 цифр')\r\n         .max(12, 'Некорректный номер')\r\n         .required('Укажите телефон'),\r\n      password: yup.string().required('Обязательно'),\r\n      confirmPassword: yup.string().oneOf([yup.ref('password')], 'Пароли не совпадают').required('Обязательно'),\r\n      email: yup.string().email('Не корректный email').required('Обязательно'),\r\n   })\r\n\r\n   return (\r\n      <div>\r\n         <Formik\r\n            initialValues={{\r\n               name: 'Александр',\r\n               tel: '89263777708',\r\n               password: '123',\r\n               email: 'shestihin@mail.ru',\r\n               confirmPassword: '123',\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values) => {\r\n               console.log(values);\r\n            }}\r\n            validationSchema={validationSchema}\r\n         >\r\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n               <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                     <p>\r\n                        <label htmlFor=\"name\">Имя</label>\r\n                        <Field\r\n                           component={Input}\r\n                           errors={errors.name}\r\n                           type={'name'}\r\n                           name={'name'}\r\n                           id={'name'}\r\n                           onChange={handleChange}\r\n                           onBlur={handleBlur}\r\n                           value={values.name}\r\n                           touched={touched.name}\r\n                        />\r\n\r\n                     </p>\r\n                  </div>\r\n\r\n                  <div>\r\n                     <p>\r\n                        <label htmlFor=\"email\">Почта</label>\r\n                        <Field\r\n                           component={Input}\r\n                           errors={errors.email}\r\n                           type={'text'}\r\n                           name={'email'}\r\n                           id={'email'}\r\n                           onChange={handleChange}\r\n                           onBlur={handleBlur}\r\n                           value={values.email}\r\n                           touched={touched.email}\r\n                        />\r\n                     </p>\r\n                  </div>\r\n                  <div>\r\n                     <p>\r\n                        <label htmlFor=\"tel\">Телефон</label>\r\n                        <Field\r\n                           component={Input}\r\n                           errors={errors.tel}\r\n                           type={'tel'}\r\n                           name={'tel'}\r\n                           id={'tel'}\r\n                           onChange={handleChange}\r\n                           onBlur={handleBlur}\r\n                           value={values.tel}\r\n                           touched={touched.tel}\r\n                        />\r\n                     </p>\r\n                  </div>\r\n                  <div>\r\n                     <label htmlFor=\"password\">Пароль</label>\r\n                     <Field\r\n                        component={Input}\r\n                        errors={errors.password}\r\n                        type={'password'}\r\n                        name={'password'}\r\n                        id={'password'}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                        touched={touched.password}\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <label htmlFor=\"confirmPassword\">Подтвердите пароль</label>\r\n                     <Field\r\n                        component={Input}\r\n                        errors={errors.confirmPassword}\r\n                        type={'password'}\r\n                        name={'confirmPassword'}\r\n                        id={'confirmPassword'}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.confirmPassword}\r\n                        touched={touched.confirmPassword}\r\n                     />\r\n                  </div>\r\n                  <button\r\n                     disabled={!isValid && !dirty}\r\n                     onClick={handleSubmit}\r\n                     type={'submit'}\r\n                  >Отправить</button>\r\n\r\n               </form>\r\n            )}\r\n\r\n         </Formik>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default ForFormik;"],"sourceRoot":""}